name: CI/CD Pipeline for User Service

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code for User Service
        uses: actions/checkout@v2

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Install JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Maven
        run: sudo apt-get install -y maven

      - name: Build the application
        run: mvn clean package

      - name: Create network if not exists
        run: |
          docker network inspect eureka-network || docker network create eureka-network

      # Step to start the Eureka server first
      - name: Set up Docker Compose for Eureka Server
        working-directory: .
        run: docker-compose up -d eureka-server

      # Wait for Eureka Server to be fully operational
      - name: Wait for Eureka Server to be ready
        run: sleep 120  # Adjust this time based on how long it takes for your Eureka server to start

      # Now start the user-service
      - name: Set up Docker Compose for User Service
        working-directory: .
        run: docker-compose up -d user-service

      - name: Wait for User Service to be ready
        run: sleep 90  # Increased wait time to allow service registration


